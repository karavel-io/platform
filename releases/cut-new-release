#!/usr/bin/env bash
set -e

function die {
  echo "$1"
  exit 1
}

OPTS=$(getopt -o '' -a --longoptions 'url:,version:,dry-run' -n "$0" -- "$@")
set -- $OPTS

while true; do
  case "$1" in
    --version )
        version=$(echo "${2:1:-1}" | tr '[:upper:]' '[:lower:]')      # remove '' and lowercase
        if [[ "$version" == *"rc"* ]]; then
          release="$version"
        else
          release="${version::-2}" # remove .z from xxxx.y.z TODO handle -RC.Z
        fi
        shift 2
        ;;
    --dry-run )
        DRY_RUN_CMD="echo"
        shift 1
        ;;
    --)
        shift
        break
        ;;
    *)
        echo ""
        echo "Error in given Parameters. Undefined: "
        echo "$*"
        echo ""
        echo "Usage: $0 --version XXXX.Y.Z [--dry-run]"
        exit 1
  esac
done

[[ -z "$version" ]] && die "--version must be provided"

index="$(cat releases/$release/index.yaml)"

set +e

if $DRY_RUN_CMD helm repo add "$version" "s3://$HELM_BUCKET_NAME/$version"; then
  $DRY_RUN_CMD helm s3 init "s3://$HELM_BUCKET_NAME/$version"
fi
set -e

$DRY_RUN_CMD rm -rf dist
$DRY_RUN_CMD mkdir -p dist
$DRY_RUN_CMD cd dist
for component in $(echo "$index" | yq eval '.components | keys | .[]' -)
do
  tag="$(echo "$index" | yq eval ".components[\"$component\"]" -)"
  echo "Downloading component '$component' version $tag"
  chart="$component-$tag.tgz"
  $DRY_RUN_CMD fetch --repo="https://github.com/karavel-io/platform-component-$component" \
  --tag="$tag" \
  --release-asset="$chart" \
  .
  $DRY_RUN_CMD helm s3 push "./$chart" "$version" --relative
done
