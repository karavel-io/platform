apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: loki
    {{- include "loki.labels" . | nindent 4 }}
  {{ with .Values.s3.iamRole }}
  annotations:
    iam.amazonaws.com/role: {{ . }}
  {{ end }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      {{- include "loki.selectorLabels" . | nindent 6 }}
  serviceName: loki-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
        {{- include "loki.labels" . | nindent 8 }}
    spec:
      serviceAccountName: loki
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      containers:
        - name: loki
          image: "grafana/loki:{{ .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/loki/loki.yaml"
          {{- if .Values.tracing.enable }}
            - "-tracing.enabled=true"
          {{- with .Values.tracing }}
          env:
            - name: JAEGER_AGENT_HOST
              value: {{ .host }}
            - name: JAEGER_ENDPOINT
              value: {{ .endpoint }}
            - name: JAEGER_SAMPLER_TYPE
              value: {{ .samplerType }}
            - name: JAEGER_SAMPLER_PARAM
              value: {{ .samplerParam | quote }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: "/data"
            - name: scratch
              mountPath: /tmp/scratch
            - name: rules
              mountPath: /rules
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
            - name: gossip
              containerPort: 7946
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            readOnlyRootFilesystem: true
      terminationGracePeriodSeconds: 4800
      volumes:
        - name: scratch
          emptyDir: {}
        - name: rules
          configMap:
            name: loki-alerting-rules
        - name: config
          configMap:
            name: loki
        {{- if ne .Values.store "filesystem" }}
        - name: storage
          emptyDir: {}
        {{- end }}
  {{- if eq .Values.store "filesystem"}}
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
  {{- end }}
