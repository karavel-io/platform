---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "cert-manager.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
  {{- with .Values.letsencrypt.route53.eksRole }}
  annotations:
    eks.amazonaws.com/role-arn: {{ . }}
  {{- end}}
---
# Issuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-controller-issuers
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-issuers
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "issuers/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# ClusterIssuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-controller-clusterissuers
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-clusterissuers
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "clusterissuers/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Certificates controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-controller-certificates
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-certificates
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates/finalizers", "certificaterequests/finalizers"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders"]
    verbs: ["create", "delete", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Orders controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-controller-orders
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-orders
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "orders/status"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "challenges"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["create", "delete"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Challenges controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-controller-challenges
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-challenges
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  # Use to update challenge resource status
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "challenges/status"]
    verbs: ["update"]
  # Used to watch challenge resources
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["get", "list", "watch"]
  # Used to watch challenges, issuer and clusterissuer resources
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  # Need to be able to retrieve ACME account private key to complete challenges
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  # Used to create events
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  # HTTP01 rules
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  # We require the ability to specify a custom hostname when we are creating
  # new ingress resources.
  # See: https://github.com/openshift/origin/blob/21f191775636f9acadb44fa42beeb4f75b255532/pkg/route/apiserver/admission/ingress_admission.go#L84-L148
  - apiGroups: ["route.openshift.io"]
    resources: ["routes/custom-host"]
    verbs: ["create"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges/finalizers"]
    verbs: ["update"]
  # DNS01 rules (duplicated above)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
---
# ingress-shim controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-controller-ingress-shim
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-ingress-shim
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests"]
    verbs: ["create", "update", "delete"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-view
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-view
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-edit
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-edit
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
---
# Permission to approve CertificateRequests referencing cert-manager.io Issuers and ClusterIssuers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-controller-approve-cert-manager-io
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-approve-cert-manager-io
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["signers"]
    verbs: ["approve"]
    resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
---
# Permission to:
# - Update and sign CertificatSigningeRequests referencing cert-manager.io Issuers and ClusterIssuers
# - Perform SubjectAccessReviews to test whether users are able to reference Namespaced Issuers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "cert-manager.name" . }}-controller-certificatesigningrequests
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-certificatesigningrequests
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests/status"]
    verbs: ["update"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["signers"]
    resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
    verbs: ["sign"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-controller-certificatesigningrequests
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-certificatesigningrequests
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "cert-manager.name" . }}-controller-certificatesigningrequests
subjects:
  - name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-controller-approve-cert-manager-io
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-approve-cert-manager-io
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "cert-manager.name" . }}-controller-approve-cert-manager-io
subjects:
  - name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-controller-issuers
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-issuers
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "cert-manager.name" . }}-controller-issuers
subjects:
  - name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-controller-clusterissuers
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-clusterissuers
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "cert-manager.name" . }}-controller-clusterissuers
subjects:
  - name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-controller-certificates
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-certificates
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "cert-manager.name" . }}-controller-certificates
subjects:
  - name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-controller-orders
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-oprders
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "cert-manager.name" . }}-controller-orders
subjects:
  - name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-controller-challenges
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-challenges
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "cert-manager.name" . }}-controller-challenges
subjects:
  - name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-controller-ingress-shim
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-controller-ingress-shim
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "cert-manager.name" . }}-controller-ingress-shim
subjects:
  - name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "cert-manager.name" . }}-leaderelection
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-leaderelection
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
rules:
  # Used for leader election by the controller
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["cert-manager-controller"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-controller"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "cert-manager.name" . }}-leaderelection
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "cert-manager.name" . }}-leaderelection
    {{- include "cert-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "cert-manager.name" . }}-leaderelection
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: {{ include "cert-manager.name" . }}
    namespace: {{ .Release.Namespace }}
