{{- if eq .Values.processor "imds" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "aws-node-termination-handler.name" . }}-windows
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "aws-node-termination-handler.labels" . | nindent 4 }}
    kubernetes.io/os: windows
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "aws-node-termination-handler.selectorLabels" . | nindent 6 }}
      kubernetes.io/os: windows
  template:
    metadata:
      labels:
        {{- include "aws-node-termination-handler.labels" . | nindent 8 }}
        kubernetes.io/os: windows
    spec:
      priorityClassName: "system-node-critical"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "kubernetes.io/os"
                  operator: In
                  values:
                    - windows
                - key: "kubernetes.io/arch"
                  operator: In
                  values:
                    - amd64
      serviceAccountName: {{ include "aws-node-termination-handler.name" . }}
      dnsPolicy: "ClusterFirst"
      containers:
        - name: aws-node-termination-handler
          image: docker.io/amazon/aws-node-termination-handler:v{{ .Chart.AppVersion }}
          imagePullPolicy: IfNotPresent
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SPOT_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DELETE_LOCAL_DATA
            value: "false"
          - name: IGNORE_DAEMON_SETS
            value: "true"
          - name: GRACE_PERIOD
            value: "30"
          - name: POD_TERMINATION_GRACE_PERIOD
            value: "30"
          - name: INSTANCE_METADATA_URL
            value: "http://169.254.169.254:80"
          - name: NODE_TERMINATION_GRACE_PERIOD
            value: "120"
          - name: WEBHOOK_URL
            value: "{{ .Values.webhook.url }}"
          - name: WEBHOOK_HEADERS
            value: {{ .Values.webhook.headers | toJson | squote }}
          - name: WEBHOOK_TEMPLATE
            value: {{ .Values.webhook.tpl | toJson | squote }}
          - name: DRY_RUN
            value: "false"
          - name: ENABLE_SPOT_INTERRUPTION_DRAINING
            value: "true"
          - name: ENABLE_SCHEDULED_EVENT_DRAINING
            value: "true"
          - name: ENABLE_REBALANCE_MONITORING
            value: "false"
          - name: METADATA_TRIES
            value: "3"
          - name: CORDON_ONLY
            value: "false"
          - name: TAINT_NODE
            value: "true"
          - name: JSON_LOGGING
            value: "true"
          - name: WEBHOOK_PROXY
            value: ""
          - name: UPTIME_FROM_FILE
            value: ""
          - name: ENABLE_PROMETHEUS_SERVER
            value: "true"
          - name: PROMETHEUS_SERVER_PORT
            value: "9092"
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
        - operator: Exists
{{- end }}
