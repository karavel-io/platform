apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gatekeeper.name" . }}-audit
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "gatekeeper.name" . }}-audit
    {{ include "gatekeeper.labels" . | nindent 4 }}
    app.kubernetes.io/component: audit
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "gatekeeper.name" . }}-audit
      {{ include "gatekeeper.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: audit
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "gatekeeper.name" . }}-audit
        {{ include "gatekeeper.labels" . | nindent 8 }}
        app.kubernetes.io/component: audit
      annotations:
        container.seccomp.security.alpha.kubernetes.io/manager: runtime/default
    spec:
      automountServiceAccountToken: true
      serviceAccountName: gatekeeper-admin
      terminationGracePeriodSeconds: 60
      priorityClassName: system-cluster-critical
      containers:
      - name: manager
        command:
        - /manager
        args:
        - --audit-interval=60
        - --log-level=INFO
        - --constraint-violations-limit=20
        - --audit-from-cache=false
        - --audit-chunk-size=0
        - --emit-audit-events=false
        - --operation=audit
        - --operation=status
        - --logtostderr
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: 'openpolicyagent/gatekeeper:v{{ .Chart.AppVersion }}'
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8888
          name: metrics
          protocol: TCP
        - containerPort: 9090
          name: healthz
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
        readinessProbe:
          httpGet:
            path: /readyz
            port: 9090
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsGroup: 999
          runAsNonRoot: true
          runAsUser: 1000
      nodeSelector:
        kubernetes.io/os: linux
