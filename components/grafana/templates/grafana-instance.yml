apiVersion: integreatly.org/v1alpha1
kind: Grafana
metadata:
  name: grafana-operated
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: grafana-operated
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  deployment:
    labels:
      app.kubernetes.io/name: grafana-operated
      {{- include "grafana.labels" . | nindent 6 }}
    skipCreateAdminAccount: false
    envFrom:
      {{ if .Values.secret }}
      - secretRef:
          name: cluster-{{ include "grafana.name" . }}-secrets
      {{- end }}
      {{- if .Values.dex.enable }}
      - secretRef:
          name: dex-grafana-credentials
      - configMapRef:
          name: {{ include "grafana.name" . }}-dex-config
      {{- end }}
  service:
    labels:
      app.kubernetes.io/name: grafana-operated
      {{- include "grafana.labels" . | nindent 6 }}
  ingress:
    enabled: true
    {{- $url := urlParse (required "parameter 'publicURL' is required for generating Grafana instance" .Values.publicURL) }}
    hostname: {{ $url.host }}
    tlsEnabled: true
    tlsSecretName: grafana-operated-tls
    labels:
      app.kubernetes.io/name: grafana-operated
      {{- include "grafana.labels" . | nindent 6 }}
  client:
    preferService: true
  jsonnet:
    libraryLabelSelector:
      matchLabels:
        grafana.integreatly.org/instance: grafana-operated
  config:
    server:
      root_url: {{ .Values.publicURL }}
    log:
      mode: console
      level: warn
    auth:
      disable_login_form: true
      disable_signout_menu: false
    auth.anonymous:
      enabled: false
    auth.generic_oauth:
      enabled: true
    users:
      viewers_can_edit: true
  dashboardLabelSelector:
    - matchExpressions:
        - {key: grafana.integreatly.org/instance, operator: In, values: [grafana-operated]}
