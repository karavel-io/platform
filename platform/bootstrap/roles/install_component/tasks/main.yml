- name: Render manifests for {{ component_name }}
  helm_template:
    name: '{{ component_name }}'
    chart_ref: 'karavel/{{ component_name }}'
    chart_version: '{{ component_version }}'
    release_namespace: '{{ component_namespace }}'
    release_values: '{{ component_values | default(omit) }}'
  register: component

- name: Ensure local manifests directory exist for {{ component_name }}
  delegate_to: localhost
  file:
    path: '{{ playbook_dir }}/{{ output_dir }}/{{ component_name }}'
    recurse: yes
    state: directory

- name: Generate manifests for {{ component_name }}
  delegate_to: localhost
  with_items: '{{ component.manifests }}'
  when: item.kind != "CustomResourceDefinition"
  copy:
    dest: '{{ playbook_dir }}/{{ output_dir }}/{{ component_name }}/{{ item.metadata.name }}-{{ item.kind | lower }}.yml'
    content: '{{ item | to_nice_yaml }}'
    mode: 0644

- name: Ensure local CRD manifests directory exist for {{ component_name }}
  delegate_to: localhost
  when: component.manifests | selectattr("kind", "equalto", "CustomResourceDefinition") | length > 0
  file:
    path: '{{ playbook_dir }}/{{ output_dir }}/{{ component_name }}/crds'
    recurse: yes
    state: directory

- name: Generate CRD manifests for {{ component_name }}
  delegate_to: localhost
  with_items: '{{ component.manifests }}'
  when: item.kind == "CustomResourceDefinition"
  copy:
    dest: '{{ playbook_dir }}/{{ output_dir }}/{{ component_name }}/crds/{{ item.metadata.name }}.yml'
    content: '{{ item | to_nice_yaml }}'
    mode: 0644

- name: Generate kustomization stack for {{ component_name }}
  delegate_to: localhost
  vars:
    resources: '{{ component.manifests }}'
  template:
    src: kustomization.yml.j2
    dest: '{{ playbook_dir }}/{{ output_dir }}/{{ component_name }}/kustomization.yml'
    mode: 0644

- name: Register {{ component_name }} component
  ansible.builtin.set_fact:
    karavel_components: "{{ karavel_components | default([]) | union([{'name': component_name, 'namespace': component_namespace}])}}"
