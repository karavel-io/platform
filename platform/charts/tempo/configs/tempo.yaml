auth_enabled: false

server:
  http_listen_port: 3100

distributor:
  receivers:                           # this configuration will listen on all ports and protocols that tempo is capable of.
    jaeger:                            # the receives all come from the OpenTelemetry collector.  more configuration information can
      protocols:                       # be found there: https://github.com/open-telemetry/opentelemetry-collector/tree/master/receiver
        thrift_http:                   #
        grpc:                          # for a production deployment you should only enable the receivers you need!
        thrift_binary:
        thrift_compact:
    zipkin:
    otlp:
      protocols:
        http:
        grpc:
    opencensus:

ingester:
  trace_idle_period: 10s               # the length of time after a trace has not received spans to consider it complete and flush it
  traces_per_block: 100                # cut the head block when it his this number of traces or ...
  max_block_duration: 5m               #   this much time passes

compactor:
  compaction:
    block_retention: 336h               # Optional. Duration to keep blocks.  Default is 14 days (336h).
    compacted_block_retention: 1h       # Optional. Duration to keep blocks that have been compacted elsewhere
    compaction_window: 4h               # Optional. Blocks in this time window will be compacted together
    chunk_size_bytes: 10485760          # Optional. Amount of data to buffer from input blocks. Default is 10 MiB
    flush_size_bytes: 31457280          # Optional. Flush data to backend when buffer is this large. Default is 30 MiB
    max_block_bytes: 107374182400       # Optional. Maximum size of a compacted block in bytes.  Default is 100 GiB
    retention_concurrency: 10           # Optional. Number of tenants to process in parallel during retention. Default is 10.

storage:
  trace:
    backend: s3                        # backend configuration to use
    wal:
      path: /tmp/tempo/wal             # where to store the the wal locally
      bloom_filter_false_positive: .05 # bloom filter false positive rate.  lower values create larger filters but fewer false positives
      index_downsample: 10             # number of traces per index record
    {{- if eq .Values.store "filesystem" }}
    local:
      path: /data/tempo/blocks
    {{- else if eq .Values.store "s3" }}
    {{- with .Values.s3 }}
    s3:
      bucket: {{ .bucket }}                    # how to store data in s3
      endpoint: {{ .endpoint }}
      insecure: {{ .insecure }}
      region: {{ .region }}
    {{- end }}
    {{- end }}
    pool:
      max_workers: 100                 # the worker pool mainly drives querying, but is also used for polling the blocklist
      queue_depth: 10000

memberlist:
  bind_port: 7946
  join_members:
    - {{ include "tempo.name" . }}-headless.{{ .Release.Namespace }}.svc.cluster.local:7946
