apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-repo-server
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: argocd-repo-server
    helm.sh/chart: {{ include "argocd.chart" . }}
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/version: {{ include "argocd.version" . | quote}}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/component: repo-server
  revisionHistoryLimit: 5
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-repo-server
        helm.sh/chart: {{ include "argocd.chart" . }}
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/component: repo-server
        app.kubernetes.io/version: {{ include "argocd.version" . | quote }}
    spec:
      containers:
      - name: repo-server
        image: "argoproj/argocd:{{ include "argocd.version" . }}"
        imagePullPolicy: IfNotPresent
        command:
        - uid_entrypoint.sh
        - argocd-repo-server
        - --redis
        - argocd-redis:6379
        - --logformat
        - text
        - --loglevel
        - info
        volumeMounts:
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        ports:
        - name: repo-server
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 8084
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {}
      serviceAccountName: default
      volumes:
      - configMap:
          name: argocd-ssh-known-hosts-cm
        name: ssh-known-hosts
