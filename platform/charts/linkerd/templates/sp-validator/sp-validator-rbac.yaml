---
###
### Service Profile Validator RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-{{ .Release.Namespace }}-sp-validator
  labels:
    {{.Values.global.controllerComponentLabel}}: sp-validator
    {{.Values.global.controllerNamespaceLabel}}: {{ .Release.Namespace }}
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-{{ .Release.Namespace }}-sp-validator
  labels:
    {{.Values.global.controllerComponentLabel}}: sp-validator
    {{.Values.global.controllerNamespaceLabel}}: {{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: linkerd-sp-validator
  namespace: {{ .Release.Namespace }}
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-{{ .Release.Namespace }}-sp-validator
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: {{ .Release.Namespace }}
  labels:
    {{.Values.global.controllerComponentLabel}}: sp-validator
    {{.Values.global.controllerNamespaceLabel}}: {{ .Release.Namespace }}
{{- include "partials.image-pull-secrets" . }}
---
{{- $host := printf "linkerd-sp-validator.%s.svc" .Values.global.namespace }}
{{- $ca := genSelfSignedCert $host (list) (list $host) 365 }}
{{- if (not .Values.profileValidator.externalSecret) }}
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: {{ .Values.global.namespace }}
  labels:
    {{.Values.global.controllerComponentLabel}}: sp-validator
    {{.Values.global.controllerNamespaceLabel}}: {{ .Release.Namespace }}
  annotations:
    {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
type: kubernetes.io/tls
data:
  tls.crt: {{ ternary (b64enc (trim $ca.Cert)) (b64enc (trim .Values.profileValidator.crtPEM)) (empty .Values.profileValidator.crtPEM) }}
  tls.key: {{ ternary (b64enc (trim $ca.Key)) (b64enc (trim .Values.profileValidator.keyPEM)) (empty .Values.profileValidator.keyPEM) }}
---
{{- end }}
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    {{.Values.global.controllerComponentLabel}}: sp-validator
    {{.Values.global.controllerNamespaceLabel}}: {{ .Release.Namespace }}
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    {{- toYaml .Values.profileValidator.namespaceSelector | trim | nindent 4 }}
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: {{ .Values.global.namespace }}
      path: "/"
{{- if and (.Values.profileValidator.externalSecret) (empty .Values.profileValidator.caBundle) }}
  {{- fail "If profileValidator.externalSecret is true then you need to provide profileValidator.caBundle" }}
{{- end }}
    caBundle: {{ ternary (b64enc (trim $ca.Cert)) (b64enc (trim .Values.profileValidator.caBundle)) (empty .Values.profileValidator.caBundle) }}
  failurePolicy: {{.Values.webhookFailurePolicy}}
  rules:
  - operations: [ "CREATE" , "UPDATE" ]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  {{- if not .Values.omitWebhookSideEffects }}
  sideEffects: None
  {{- end }}
