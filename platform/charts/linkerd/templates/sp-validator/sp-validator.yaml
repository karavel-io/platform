---
###
### Service Profile Validator
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: {{ .Release.Namespace }}
  labels:
    {{.Values.global.controllerComponentLabel}}: sp-validator
    {{.Values.global.controllerNamespaceLabel}}: {{.Values.global.namespace}}
  annotations:
    {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
spec:
  type: ClusterIP
  selector:
    {{.Values.global.controllerComponentLabel}}: sp-validator
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
{{- $tree := deepCopy . }}
{{ $_ := set $tree.Values.global.proxy "workloadKind" "deployment" -}}
{{ $_ := set $tree.Values.global.proxy "component" "linkerd-sp-validator" -}}
{{ include "linkerd.proxy.validation" .Values.global.proxy -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
  labels:
    app.kubernetes.io/name: sp-validator
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{default .Values.global.linkerdVersion .Values.global.controllerImageVersion}}
    {{.Values.global.controllerComponentLabel}}: sp-validator
    {{.Values.global.controllerNamespaceLabel}}: {{.Values.global.namespace}}
  name: linkerd-sp-validator
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{.Values.controllerReplicas}}
  selector:
    matchLabels:
      {{.Values.global.controllerComponentLabel}}: sp-validator
  {{- if .Values.enablePodAntiAffinity }}
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if (or (empty .Values.global.cliVersion) (not (eq (.Values.stage | toString) "control-plane"))) }}
        checksum/config: {{ include (print $.Template.BasePath "/sp-validator-rbac.yaml") . | sha256sum }}
        {{- end }}
        {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
        {{- include "partials.proxy.annotations" .Values.global.proxy| nindent 8}}
        {{- with .Values.global.podAnnotations }}{{ toYaml . | trim | nindent 8 }}{{- end }}
      labels:
        {{.Values.global.controllerComponentLabel}}: sp-validator
        {{.Values.global.controllerNamespaceLabel}}: {{.Values.global.namespace}}
        {{.Values.global.workloadNamespaceLabel}}: {{.Values.global.namespace}}
        {{- include "partials.proxy.labels" $tree.Values.global.proxy | nindent 8}}
        {{- with .Values.global.podLabels }}{{ toYaml . | trim | nindent 8 }}{{- end }}
    spec:
      {{- if .Values.tolerations -}}
      {{- include "linkerd.tolerations" . | nindent 6 }}
      {{- end -}}
      {{- include "linkerd.node-selector" . | nindent 6 }}
      {{- if .Values.enablePodAntiAffinity -}}
      {{- $local := dict "component" "sp-validator" "label" .Values.global.controllerComponentLabel -}}
      {{- include "linkerd.pod-affinity" $local | nindent 6 -}}
      {{- end }}
      containers:
      - args:
        - sp-validator
        - -log-level={{.Values.global.controllerLogLevel}}
        image: {{.Values.controllerImage}}:{{default .Values.global.linkerdVersion .Values.global.controllerImageVersion}}
        imagePullPolicy: {{.Values.global.imagePullPolicy}}
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        {{- if .Values.spValidatorResources -}}
        {{- include "partials.resources" .Values.spValidatorResources | nindent 8 }}
        {{- end }}
        securityContext:
          runAsUser: {{.Values.controllerUID}}
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      {{- if not (empty .Values.spValidatorProxyResources) }}
      {{- $r := merge .Values.spValidatorProxyResources .Values.global.proxy.resources }}
      {{- $_ := set $tree.Values.global.proxy "resources" $r }}
      {{- end }}
      {{- include "partials.setControlPlaneTracing.proxy" $tree }}
      - {{- include "partials.proxy" $tree | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ if not .Values.global.cniEnabled -}}
      initContainers:
      - {{- include "partials.proxy-init" . | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ end -}}
      serviceAccountName: linkerd-sp-validator
      volumes:
      - name: tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      {{ if .Values.global.controlPlaneTracing -}}
      - {{- include "partials.proxy.volumes.labels" . | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ end -}}
      {{ if not .Values.global.cniEnabled -}}
      - {{- include "partials.proxyInit.volumes.xtables" . | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ end -}}
      - {{- include "partials.proxy.volumes.identity" . | indent 8 | trimPrefix (repeat 7 " ") }}
